<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Bienvenue dans notre application ProjetDotNetM1

Cette application permet d'importer vos images et de les tagger avec un système de hiérarchisation.


--------------------------------------------------------------------------------
-- IMPORTATION - EXPORTATION --
--------------------------------------------------------------------------------
Les images importées doivent être au format jpeg pour être interprétées par l'application.

1) Pour importer des images, cliquez sur Fichier - Importer 
	- Dossier :  pour importer son intégralité 
	- Fichier : pour selectionner les fichiers correspondants
Une fenêtre d'exploration va s'ouvrir, sélectionner votre choix puis cliquez sur Ok ou Ouvrir selon l'importation.

2) Pour importer une liste de tags, cliquez sur Liste de tags - Importer une liste...
Une fenêtre d'exploration va s'ouvrir, sélectionner votre choix puis cliquez sur Ouvrir pour finaliser l'importation.
Faites un clic droit sur le cadre gauche de l'interface et cliquez sur Raffraichir afin de faire apparaître la liste hiérarchisée si besoin. 

3) Pour exporter une liste de tags au format XML, cliquez sur Liste de tags - Exporter une liste...
Une fenêtre d'exploration va s'ouvrir, renommez si besoin votre liste puis cliquez sur Enregistrer pour finaliser l'exportation.


--------------------------------------------------------------------------------
           -- SECTION IMAGE --
--------------------------------------------------------------------------------

1) AFFICHAGE IMAGE

Pour afficher une image après son importation, une mise à jour est effectuée automatiquement. Dans le cas où celle-ci échouerait, 
cliquez sur Mise à jour dans le menu situé au dessus de l'interface.

	a) Double cliquez sur une image pour zoomer et faire afficher les différentes informations. 
	b) Double cliquez encore une fois dessus et choisissez selon quelle application vous voulez l'afficher en plein écran. (A défaut : Windows / HRF Visual)

2) RENOMMAGE IMAGE

Pour renommer une image, double cliquez dessus dans l'interface. Une nouvelle fenêtre où l'onglet renommage sera accessible. Cliquez sur l'icône à droite. 
Renommez l'image et cliquez hors du champ pour valider le nouveau nom.

3) RECHERCHE IMAGE

Pour rechercher une image à partir de son nom, cliquez sur la barre de recherche et tapez le nom voulu. Les images correspondantes s'afficheront au fur et à mesure.


--------------------------------------------------------------------------------
              -- SECTION TAG --
--------------------------------------------------------------------------------
1) MISE A JOUR

Pour mettre à jour la liste de tag, effectuer un clic droit sur la partie gauche de l'interface d'accueil et sélectionnez Rafraîchir. 
Sinon, cliquez sur Mise à jour dans le bandeau en haut de l'interface.

2) AJOUT - SUPPRESSION - MODIFICATION

	a) Pour ajouter un tag dans la liste, faites un clic dans la partie gauche de l'interface d'accueil et effectuez un clic droit pour sélectionner Ajouter. 
	    Tapez le nom souhaité et cliquez sur l'interface pour valider.
	a-bis) Pour ajouter un tag à une image sélectionnée, cliquez sur l'onglet tag et double-cliquez sur le cadre en bas de l'image. Un champ va apparaître, il suffit alors 
	     d'entrer le nom voulu et de cliquer à côté pour valider.
	
	b) Pour renommer un tag, il faut le sélectionner dans l'arborescence, puis faire un clic droit et sélectionner Renommer. Il faut ensuite taper le nom voulu et effectuer un clic 
	     gauche pour valider le renommage.

	c) Pour déplacer un tag dans l'arborescence à gauche, il faut le selectionner tout en maintenant le clic gauche enfoncé et relâcher à l'endroit souhaité.

	d) Pour supprimer un tag dans l'arborescence, il faut le sélectionner, effectuer un clic droit et cliquer sur Supprimer.
	
	e) Pour supprimer un tag d'une image, il faut sélectionner l'image, aller dans l'onglet Tag et cliquer sur l'icône à droite. Il faut ensuite cocher le ou les tag(s) à supprimer et finaliser
	    en cliquant sur l'icône de la corbeille à droite.

3) RECHERCHE TAG

Pour rechercher une image à partir de son tag, cliquez sur la barre de recherche et tapez le tag voulu. Les images correspondantes s'afficheront au fur et à mesure.


--------------------------------------------------------------------------------
                  -- A PROPOS --
--------------------------------------------------------------------------------

Pour afficher la section A propos de l'application, cliquez sur Edition - A Propos.

------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------</value>
  </data>
</root>